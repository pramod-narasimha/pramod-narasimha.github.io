{"version":3,"sources":["Components/PriceListComponent/styles.js","Components/PriceListComponent/PriceListComponent.js","routes/PublicRoutes.js","reducers/FetchApiDataReducer.js","reducers/rootReducer.js","stores/store.js","App.js","serviceWorker.js","index.js"],"names":["InputStyles","styled","Input","RowStyles","Row","HeaderRowStyles","Container","div","ButtonStyles","Button","HeaderTitleStyle","h2","INITIAL_DATA","domesticTotal","internationalTotal","included","name","domesticPrice","internationalPrice","excluded","PriceListComponent","React","useState","priceTableData","setPriceTableData","handleOnChangeInput","value","row","title","type","tempPriceTableData","console","log","deletePerformed","length","checkForCurrentIncludeEmptyRow","tempArray","filter","key","push","splice","calculateTotalPrice","checkForCurrentExcludedEmptyRow","tableData","price","map","rowData","parseInt","data","style","float","today","Date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getCurrentDate","span","includedRowData","placeholder","onChange","e","target","onKeyDown","keyCode","padding","display","excludedRowData","onClick","tempTableData","displayResult","PublicRoutes","exact","path","defaultState","isLoading","postsList","postDataList","sideDrawer","FetchApiDataReducer","state","action","payload","updateState","update","Object","assign","resetState","isLoggedIn","rootReducer","combineReducers","apiData","axios","defaults","withCredentials","middleware","applyMiddleware","thunk","withExtraArgument","store","createStore","composeWithDevTools","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.3adee97d.chunk.js","sourcesContent":["import styled from \"styled-components\";\nimport { Input, Row, Button } from \"antd\";\n\nexport const InputStyles = styled(Input)`\n  border: none;\n  :focus {\n    border: none;\n  }\n\n  ::-webkit-outer-spin-button,\n  ::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n    margin: 0;\n  }\n`;\n\nexport const RowStyles = styled(Row)`\n  border: 1px solid #dddbda;\n`;\n\nexport const HeaderRowStyles = styled(RowStyles)`\n  font-weight: bold;\n  font-size: 12px;\n  padding: 10px;\n//   border-radius: 4px;\n`;\nexport const Container = styled.div`\n  margin: 10px;\n`;\n\nexport const ButtonStyles = styled(Button)`\n  margin-top: 10px;\n  margin-bottom: 10px;\n`;\nexport const HeaderTitleStyle = styled.h2`\n    font-size: 16px;\n    font-weight\": bold;\n`;\n","import React from \"react\";\nimport {  Col } from \"antd\";\nimport { InputStyles, RowStyles, HeaderTitleStyle, Container, HeaderRowStyles, ButtonStyles } from \"./styles\";\n\nconst INITIAL_DATA = {\n  domesticTotal: 0,\n  internationalTotal: 0,\n  included: [{ name: \"\", domesticPrice: null, internationalPrice: null }],\n  excluded: [{ name: \"\" }]\n};\n\nconst PriceListComponent = () => {\n  const [priceTableData, setPriceTableData] = React.useState(INITIAL_DATA);\n\n  const handleOnChangeInput = (value, row, title, type) => {\n    const tempPriceTableData = { ...priceTableData };\n    console.log(\"OnChange is triggering\");\n    let deletePerformed = false;\n    if (type === \"included\") {\n      tempPriceTableData.included[row][title] = value;\n      if (tempPriceTableData.included.length > 1) {\n        if (checkForCurrentIncludeEmptyRow(tempPriceTableData.included[row])) {\n          const tempArray = tempPriceTableData.included.filter(\n            (value, key) => key !== row\n          );\n          tempPriceTableData.included = tempArray;\n          deletePerformed = true;\n        }\n      }\n      if (!deletePerformed) {\n        if (row === tempPriceTableData.included.length - 1) {\n          if (\n            !checkForCurrentIncludeEmptyRow(tempPriceTableData.included[row])\n          ) {\n            tempPriceTableData.included.push({\n              name: \"\",\n              domesticPrice: null,\n              internationalPrice: null\n            });\n          }\n        } else {\n          if (\n            !checkForCurrentIncludeEmptyRow(\n              tempPriceTableData.included[row + 1]\n            )\n          ) {\n            tempPriceTableData.included.splice(row + 1, 0, {\n              name: \"\",\n              domesticPrice: null,\n              internationalPrice: null\n            });\n          }\n        }\n      }\n      if (title === \"domesticPrice\") {\n        tempPriceTableData.domesticTotal = calculateTotalPrice(\n          tempPriceTableData,\n          title\n        );\n      } else if (title === \"internationalPrice\") {\n        tempPriceTableData.internationalTotal = calculateTotalPrice(\n          tempPriceTableData,\n          title\n        );\n      }\n\n      setPriceTableData(tempPriceTableData);\n    } else if (type === \"excluded\") {\n      tempPriceTableData.excluded[row][\"name\"] = value;\n      if (tempPriceTableData.excluded.length > 1) {\n        if (checkForCurrentExcludedEmptyRow(tempPriceTableData.excluded[row])) {\n          const tempArray = tempPriceTableData.excluded.filter(\n            (value, key) => key !== row\n          );\n          tempPriceTableData.excluded = tempArray;\n          deletePerformed = true;\n          //   tempPriceTableData.included.splice(row, 0);\n        }\n      }\n      if (!deletePerformed) {\n        if (row === tempPriceTableData.excluded.length - 1) {\n          if (\n            !checkForCurrentExcludedEmptyRow(tempPriceTableData.excluded[row])\n          ) {\n            tempPriceTableData.excluded.push({\n              name: \"\"\n            });\n          }\n        } else {\n          if (\n            !checkForCurrentExcludedEmptyRow(\n              tempPriceTableData.excluded[row + 1]\n            )\n          ) {\n            tempPriceTableData.excluded.splice(row + 1, 0, {\n              name: \"\"\n            });\n          }\n        }\n      }\n    }\n    setPriceTableData(tempPriceTableData);\n  };\n\n  const calculateTotalPrice = (tableData, type) => {\n    let price = 0;\n    tableData.included.map(rowData => {\n      if (rowData[type]) {\n        price = price + parseInt(rowData[type]);\n      }\n      return 0;\n    });\n    return price;\n  };\n\n  const checkForCurrentIncludeEmptyRow = data => {\n    if (!data.name && !data.domesticPrice && !data.internationalPrice) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  const checkForCurrentExcludedEmptyRow = data => {\n    if (!data.name) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  const displayResult = () => {\n    const tempTableData = { ...priceTableData };\n    const includedRowData = priceTableData.included.filter(\n      includedRowData => !checkForCurrentIncludeEmptyRow(includedRowData)\n    );\n    const excludedRowData = priceTableData.excluded.filter(\n      excludedRowData => !checkForCurrentExcludedEmptyRow(excludedRowData)\n    );\n    tempTableData.includedRowData = includedRowData;\n    tempTableData.excludedRowData = excludedRowData;\n    setPriceTableData(tempTableData);\n    console.log(\"priceList ==> \", tempTableData);\n  };\n\n  const getCurrentDate = () => {\n    let today = new Date();\n    let date = today.getFullYear()+'-'+(today.getMonth()+1)+'-'+today.getDate();\n    let time = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\n    let dateTime = date+' '+time;\n    return dateTime\n  }\n\n  return (\n    <div>\n      <Container>\n  <HeaderTitleStyle>{\"Included\"}<span style={{float: 'right'}}>{getCurrentDate()}</span></HeaderTitleStyle>\n        <HeaderRowStyles>\n          <Col span={8}>Name</Col>\n          <Col span={8}>Amount-Domestic(Excluding Task)</Col>\n          <Col span={8}>Amount-Internation(Excluding-Task)</Col>\n        </HeaderRowStyles>\n        {priceTableData.included.map((includedRowData, key) => (\n          <RowStyles key={key}>\n            <Col span={8}>\n              <InputStyles\n                placeholder=\"Name\"\n                value={includedRowData.name}\n                onChange={e =>\n                  handleOnChangeInput(e.target.value, key, \"name\", \"included\")\n                }\n                onKeyDown={e => {\n                  if (e.keyCode === 8 && !includedRowData.name) {\n                    handleOnChangeInput(\"\", key, \"name\", \"included\");\n                  }\n                }}\n              />\n            </Col>\n            <Col span={2}>\n                <span style={{padding: '5px', display: 'flex'}}>Rs.</span>\n            </Col>\n            <Col span={6}>\n              <InputStyles\n                type=\"number\"\n                value={includedRowData.domesticPrice}\n                placeholder=\"Amount\"\n                onChange={e =>\n                  handleOnChangeInput(\n                    e.target.value,\n                    key,\n                    \"domesticPrice\",\n                    \"included\"\n                  )\n                }\n                onKeyDown={e => {\n                  if (e.keyCode === 8 && !includedRowData.domesticPrice) {\n                    handleOnChangeInput(null, key, \"domesticPrice\", \"included\");\n                  }\n                }}\n              />\n            </Col>\n            <Col span={2}>\n                <p style={{padding: '5px',display: 'flex'}}>$</p>\n            </Col>\n            <Col span={6}>\n              <InputStyles\n                type=\"number\"\n                placeholder=\"Amount\"\n                value={includedRowData.internationalPrice}\n                onChange={e =>\n                  handleOnChangeInput(\n                    e.target.value,\n                    key,\n                    \"internationalPrice\",\n                    \"included\"\n                  )\n                }\n                onKeyDown={e => {\n                  if (e.keyCode === 8 && !includedRowData.internationalPrice) {\n                    handleOnChangeInput(\n                      null,\n                      key,\n                      \"internationalPrice\",\n                      \"included\"\n                    );\n                  }\n                }}\n              />\n            </Col>\n          </RowStyles>\n        ))}\n        <HeaderRowStyles>\n          <Col span={8}>Total</Col>\n          <Col span={8}>Rs. {priceTableData.domesticTotal}(Estimate)</Col>\n          <Col span={8}>$ {priceTableData.internationalTotal}(Estimate)</Col>\n        </HeaderRowStyles>\n      </Container>\n\n      <Container>\n        <HeaderTitleStyle>{\"Excluded\"}</HeaderTitleStyle>\n        <HeaderRowStyles>\n          <Col span={24}>Name</Col>\n        </HeaderRowStyles>\n        {priceTableData.excluded.map((excludedRowData, key) => (\n          <RowStyles key={key}>\n            <Col span={24}>\n              <InputStyles\n                value={excludedRowData.name}\n                placeholder=\"Name\"\n                onChange={e =>\n                  handleOnChangeInput(e.target.value, key, \"name\", \"excluded\")\n                }\n                onKeyDown={e => {\n                  if (e.keyCode === 8 && !excludedRowData.name) {\n                    handleOnChangeInput(null, key, \"name\", \"excluded\");\n                  }\n                }}\n              />\n            </Col>\n          </RowStyles>\n        ))}\n\n        <ButtonStyles type=\"primary\" onClick={() => displayResult()}>\n          Submit\n        </ButtonStyles>\n      </Container>\n    </div>\n  );\n};\n\nexport default PriceListComponent;\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\nimport PriceListComponent from '../Components/PriceListComponent/PriceListComponent'\n\nconst PublicRoutes = () => (\n  <Switch>\n    <Route exact path='/'>\n      <PriceListComponent/>\n    </Route>\n  </Switch>\n)\n\nexport default PublicRoutes\n","const defaultState = {\n  isLoading: true,\n  postsList: [],\n  postDataList: {},\n  sideDrawer: \"close\"\n};\n\nconst FetchApiDataReducer = function(state = defaultState, action) {\n  const { type, payload } = action;\n\n  const updateState = update => {\n    return Object.assign({}, state, update);\n  };\n\n  const resetState = () => {\n    return Object.assign({}, state, defaultState);\n  };\n  switch (type) {\n    case \"SET_LOGGED_IN_STATUS\":\n      return updateState({ isLoggedIn: payload });\n    case \"IS_LOADING\":\n      return updateState({ isLoading: payload });\n    case \"SET_API_DATA\":\n      return updateState({ postsList: payload });\n    case \"SET_POST_API_DATA\":\n      return updateState({ postDataList: payload });\n    case \"SET_DRAWER\":\n      return updateState({ sideDrawer: payload });\n    case \"RESET_DATA\":\n      return resetState();\n    default:\n      return state;\n  }\n};\nexport default FetchApiDataReducer;\n","import { combineReducers } from \"redux\";\nimport FetchApiDataReducer from \"./FetchApiDataReducer.js\";\n\nconst rootReducer = combineReducers({\n  apiData: FetchApiDataReducer\n});\n\nexport default rootReducer;\n","import { applyMiddleware, createStore } from \"redux\";\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from '../reducers/rootReducer';\nimport axios from 'axios';\n\naxios.defaults.withCredentials = true;\nconst middleware = applyMiddleware(thunk.withExtraArgument(axios));\n\n\nconst store = createStore(rootReducer, composeWithDevTools(middleware));\n\nexport default store;\n","import React from \"react\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport \"./App.css\";\nimport PublicRoutes from \"./routes/PublicRoutes\";\nimport { Provider } from \"react-redux\";\nimport store from './stores/store';\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Router>\n        <PublicRoutes />\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport \"antd/dist/antd.css\";\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}